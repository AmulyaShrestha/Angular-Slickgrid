{"version":3,"sources":["C:/sourcecode/Angular-Slickgrid-PackageTest/src/$_gendir lazy","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app-routing.module.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.module.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/environments/environment.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { GridBasicComponent } from './examples/grid-basic.component';\r\nimport { GridBackendComponent } from './examples/grid-backend.component';\r\nimport { GridClientSideComponent } from './examples/grid-clientside.component';\r\nimport { GridFormatterComponent } from './examples/grid-formatter.component';\r\nimport { GridGraphqlComponent } from './examples/grid-graphql.component';\r\nimport { GridOdataComponent } from './examples/grid-odata.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: 'basic', component: GridBasicComponent },\r\n  { path: 'formatter', component: GridFormatterComponent },\r\n  { path: 'clientside', component: GridClientSideComponent },\r\n  { path: 'backend', component: GridBackendComponent },\r\n  { path: 'odata', component: GridOdataComponent },\r\n  { path: 'graphql', component: GridGraphqlComponent },\r\n  { path: '', redirectTo: '/formatter', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app-routing.module.ts","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\">\\r\\n  <div class=\\\"navbar-header\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#skeleton-navigation-navbar-collapse\\\">\\r\\n      <span class=\\\"sr-only\\\">Toggle Navigation</span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n      <span class=\\\"icon-bar\\\"></span>\\r\\n    </button>\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"/\\\">\\r\\n      <i class=\\\"fa fa-home\\\"></i>\\r\\n      <span>{{title}}</span>\\r\\n    </a>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<section class=\\\"au-animate body-content\\\">\\r\\n  <div class=\\\"col-sm-3 col-md-2\\\">\\r\\n    <ul class=\\\"nav nav-pills nav-stacked\\\">\\r\\n      <li routerLinkActive=\\\"active\\\">\\r\\n        <a [routerLink]=\\\"['/basic']\\\">Basic Grid</a>\\r\\n      </li>\\r\\n      <li routerLinkActive=\\\"active\\\">\\r\\n        <a [routerLink]=\\\"['/formatter']\\\">Formatter</a>\\r\\n      </li>\\r\\n      <li routerLinkActive=\\\"active\\\">\\r\\n        <a [routerLink]=\\\"['/clientside']\\\">Client Side Sort/Filter</a>\\r\\n      </li>\\r\\n      <li routerLinkActive=\\\"active\\\">\\r\\n        <a [routerLink]=\\\"['/backend']\\\">Backend Server</a>\\r\\n      </li>\\r\\n      <li routerLinkActive=\\\"active\\\">\\r\\n        <a [routerLink]=\\\"['/odata']\\\">Backend Server with OData</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</section>\\r\\n<div id=\\\"demo-container\\\" class=\\\"col-sm-9\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".body-content {\\n  margin-top: 60px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'SlickGrid Demo';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.ts","import { GridOdataService } from 'angular-slickgrid';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { GridBasicComponent } from './examples/grid-basic.component';\r\nimport { GridFormatterComponent } from './examples/grid-formatter.component';\r\nimport { GridClientSideComponent } from './examples/grid-clientside.component';\r\nimport { GridBackendComponent } from './examples/grid-backend.component';\r\nimport { GridGraphqlComponent } from './examples/grid-graphql.component';\r\nimport { GridOdataComponent } from './examples/grid-odata.component';\r\nimport { AppRoutingRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AngularSlickgridModule } from 'angular-slickgrid';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GridBasicComponent,\r\n    GridClientSideComponent,\r\n    GridFormatterComponent,\r\n    GridBackendComponent,\r\n    GridGraphqlComponent,\r\n    GridOdataComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AngularSlickgridModule\r\n  ],\r\n  providers: [GridOdataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.module.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n  <h2>{{title}}</h2>\\r\\n  <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div [class]=\\\"status.class\\\" role=\\\"alert\\\">\\r\\n      <strong>Status: </strong> {{status.text}}\\r\\n      <span [hidden]=\\\"!processing\\\">\\r\\n        <i class=\\\"fa fa-refresh fa-spin fa-lg fa-fw\\\"></i>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid3\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.html\n// module id = ../../../../../src/app/examples/grid-backend.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.scss\n// module id = ../../../../../src/app/examples/grid-backend.component.scss\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FieldType, Formatters, Column, Formatter, FormElementType, GridOption } from 'angular-slickgrid';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst defaultPageSize = 20;\r\nconst sampleDataRoot = '/assets/data';\r\n\r\n@Component({\r\n  templateUrl: './grid-backend.component.html',\r\n  styleUrls: ['./grid-backend.component.scss']\r\n})\r\nexport class GridBackendComponent implements OnInit {\r\n  title = 'Grid connected to Backend Server';\r\n  subTitle = 'Sorting/Paging connected to a Backend Service (the demo only has \"Name\" field sortable)';\r\n  processing = false;\r\n  status = { text: '', class: '' };\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n  paginationOptions = {\r\n    pageNumber: 1,\r\n    pageSize: defaultPageSize,\r\n    sort: null\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      {id: 'name', name: 'Name', field: 'name', sortable: true},\r\n      {id: 'gender', name: 'Gender', field: 'gender'},\r\n      {id: 'company', name: 'Company', field: 'company'}\r\n    ];\r\n    this.gridOptions = {\r\n      enableAutoResize: true,\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableCellNavigation: true,\r\n      enablePagination: true,\r\n      pagination: {\r\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\r\n        pageSize: defaultPageSize,\r\n        totalItems: 0\r\n      },\r\n      onPaginationChanged: (event, args) => {\r\n        console.log(`onPagination changed, page: ${args.newPage} with size of ${args.pageSize}`);\r\n        this.paginationOptions.pageNumber = args.newPage;\r\n        this.paginationOptions.pageSize = args.pageSize;\r\n        this.getCustomerData();\r\n      },\r\n      onSortChanged: (event, args) => {\r\n        const sortColumns = (args.multiColumnSort) ? args.sortCols : new Array({sortCol: args.sortCol, sortAsc: args.sortAsc});\r\n        if (sortColumns.length === 0) {\r\n          this.paginationOptions.sort = null;\r\n        } else {\r\n          this.paginationOptions.sort = sortColumns[0].sortAsc ? 'ASC' : 'DESC';\r\n        }\r\n        this.getCustomerData();\r\n      }\r\n    };\r\n\r\n    // get the data from backend\r\n    this.getCustomerData();\r\n  }\r\n\r\n  getCustomerData() {\r\n    let url;\r\n    switch (this.paginationOptions.sort) {\r\n      case 'ASC':\r\n        url = `${sampleDataRoot}/customers_100_ASC.json`;\r\n        break;\r\n      case 'DESC':\r\n        url = `${sampleDataRoot}/customers_100_DESC.json`;\r\n        break;\r\n      default:\r\n        url = `${sampleDataRoot}/customers_100.json`;\r\n        break;\r\n    }\r\n\r\n    this.processing = true;\r\n    this.status = {\r\n      text: 'loading...',\r\n      class: 'alert alert-danger'\r\n    };\r\n    this.http.get(url).subscribe(data => {\r\n      const dataArray = <any[]> data;\r\n\r\n      // Read the result field from the JSON response.\r\n      const firstRow = (this.paginationOptions.pageNumber - 1) * this.paginationOptions.pageSize;\r\n      const updatedData = dataArray.slice(firstRow, firstRow + this.paginationOptions.pageSize);\r\n\r\n      setTimeout(() => {\r\n        this.dataset = updatedData;\r\n        this.gridOptions.pagination.totalItems = 100; // this is required for pagination to work\r\n        this.processing = false;\r\n        this.status = {\r\n          text: 'done',\r\n          class: 'alert alert-success'\r\n        };\r\n      }, 500);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-backend.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid1\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\"\\r\\n            gridHeight=\\\"400\\\"\\r\\n            gridWidth=\\\"800\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.html\n// module id = ../../../../../src/app/examples/grid-basic.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.scss\n// module id = ../../../../../src/app/examples/grid-basic.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Column, GridOption } from 'angular-slickgrid';\r\n\r\n@Component({\r\n  templateUrl: './grid-basic.component.html',\r\n  styleUrls: ['./grid-basic.component.scss']\r\n})\r\nexport class GridBasicComponent implements OnInit {\r\n  title = 'Basic Grid';\r\n  subTitle = 'basic grid with fixed sizes (800 x 400) set by `gridHeight` &amp; `gridWidth`';\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      { id: 'title', name: 'Title', field: 'title', sortable: true },\r\n      { id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true },\r\n      { id: '%', name: '% Complete', field: 'percentComplete', sortable: true },\r\n      { id: 'start', name: 'Start', field: 'start' },\r\n      { id: 'finish', name: 'Finish', field: 'finish' },\r\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', sortable: true }\r\n    ];\r\n    this.gridOptions = {\r\n      enableAutoResize: false\r\n    };\r\n\r\n    // mock a dataset\r\n    this.dataset = [];\r\n    for (let i = 0; i < 1000; i++) {\r\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\r\n      const randomMonth = Math.floor(Math.random() * 11);\r\n      const randomDay = Math.floor((Math.random() * 28));\r\n      const randomPercent = Math.round(Math.random() * 100);\r\n\r\n      this.dataset[i] = {\r\n        id: i,\r\n        title: 'Task ' + i,\r\n        duration: Math.round(Math.random() * 100) + '',\r\n        percentComplete: randomPercent,\r\n        start: `${randomMonth}/${randomDay}/${randomYear}`,\r\n        finish: `${randomMonth}/${randomDay}/${randomYear}`,\r\n        effortDriven: (i % 5 === 0)\r\n      };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <angular-slickgrid gridId=\\\"grid2\\\"\\r\\n              [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n              [gridOptions]=\\\"gridOptions\\\"\\r\\n              [dataset]=\\\"dataset\\\">\\r\\n    </angular-slickgrid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.html\n// module id = ../../../../../src/app/examples/grid-clientside.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.scss\n// module id = ../../../../../src/app/examples/grid-clientside.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FieldType, Formatters, Column, Formatter, FormElementType, GridOption } from 'angular-slickgrid';\r\n\r\nfunction randomBetween(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\n@Component({\r\n  templateUrl: './grid-clientside.component.html',\r\n  styleUrls: ['./grid-clientside.component.scss']\r\n})\r\nexport class GridClientSideComponent implements OnInit {\r\n  title = 'Client Side Sort/Filter';\r\n  subTitle = `\r\n  Sort/Filter on client side only using SlickGrid DataView\r\n  <br/>\r\n  <ul class=\"small\">\r\n    <li>Support multi-sort (by default), hold \"Shift\" key and click on the next column to sort.\r\n    <li>All column types support the following operators: (>, >=, <, <=, <>, !=, =, ==, *)\r\n    <ul>\r\n      <li>Example: >100 ... >=2001-01-01 ... >02/28/17</li>\r\n      <li><b>Note:</b> For filters to work properly (default is string), make sure to provide a FieldType (type is against the dataset, not the Formatter)</li>\r\n    </ul>\r\n    <li>Date Filters</li>\r\n    <ul>\r\n      <li>FieldType of dateUtc/date (from dataset) can use an extra option of \"filterSearchType\" to let user filter more easily. For example, in the \"UTC Date\" field below, you can type \"&gt;02/28/2017\", also when dealing with UTC you have to take the time difference in consideration.</li>\r\n    </ul>\r\n    <li>On String filters, (*) can be used as startsWith (Hello* => matches \"Hello Word\") ... endsWith (*Doe => matches: \"John Doe\")</li>\r\n  </ul>\r\n`;\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      { id: 'title', name: 'Title', field: 'title', filterable: true, sortable: true, type: FieldType.string },\r\n      { id: 'duration', name: 'Duration (days)', field: 'duration', filterable: true, sortable: true, type: FieldType.number },\r\n      { id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, filterable: true, sortable: true },\r\n      { id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, filterable: true, sortable: true, type: FieldType.date },\r\n      { id: 'usDateShort', name: 'US Date Short', field: 'usDateShort', filterable: true, sortable: true, type: FieldType.dateUsShort },\r\n      { id: 'utcDate', name: 'UTC Date', field: 'utcDate', formatter: Formatters.dateTimeIsoAmPm, filterable: true, sortable: true, minWidth: 115, type: FieldType.dateUtc, filterSearchType: FieldType.dateTimeIso },\r\n      { id: 'utcDate2', name: 'UTC Date (filterSearchType: dateUS)', field: 'utcDate', filterable: true, sortable: true, minWidth: 118, formatter: Formatters.dateUs, type: FieldType.dateUtc, filterSearchType: FieldType.dateUs },\r\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', maxWidth: 80, formatter: Formatters.checkmark,\r\n        type: FieldType.boolean,\r\n        sortable: true,\r\n        filterable: true,\r\n        filter: {\r\n          searchTerm: '', // default selection\r\n          type: FormElementType.select,\r\n          selectOptions: [ { value: '', label: '' }, { value: true, label: 'true' }, { value: false, label: 'false' } ]\r\n        }\r\n      }\r\n    ];\r\n    this.gridOptions = {\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableFiltering: true,\r\n      enableCellNavigation: true\r\n    };\r\n\r\n    // mock a dataset\r\n    this.dataset = [];\r\n    for (let i = 0; i < 1000; i++) {\r\n      const randomYear = randomBetween(2000, 2025);\r\n      const randomYearShort = randomBetween(10, 25);\r\n      const randomMonth = randomBetween(1, 12);\r\n      const randomMonthStr = (randomMonth < 10) ? `0${randomMonth}` : randomMonth;\r\n      const randomDay = randomBetween(10, 28);\r\n      const randomPercent = randomBetween(0, 100);\r\n      const randomHour = randomBetween(10, 23);\r\n      const randomTime = randomBetween(10, 59);\r\n\r\n      this.dataset[i] = {\r\n        id: i,\r\n        title: 'Task ' + i,\r\n        duration: Math.round(Math.random() * 100) + '',\r\n        percentComplete: randomPercent,\r\n        percentCompleteNumber: randomPercent,\r\n        start: new Date(randomYear, randomMonth, randomDay),          // provide a Date format\r\n        usDateShort: `${randomMonth}/${randomDay}/${randomYearShort}`, // provide a date US Short in the dataset\r\n        utcDate: `${randomYear}-${randomMonthStr}-${randomDay}T${randomHour}:${randomTime}:${randomTime}Z`,\r\n        effortDriven: (i % 3 === 0)\r\n      };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <angular-slickgrid gridId=\\\"grid2\\\"\\r\\n              [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n              [gridOptions]=\\\"gridOptions\\\"\\r\\n              [dataset]=\\\"dataset\\\">\\r\\n    </angular-slickgrid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.html\n// module id = ../../../../../src/app/examples/grid-formatter.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.scss\n// module id = ../../../../../src/app/examples/grid-formatter.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FieldType, Formatters, Column, Formatter, FormElementType, GridOption } from 'angular-slickgrid';\r\n\r\n// create my custom Formatter with the Formatter type\r\nconst myCustomCheckboxFormatter: Formatter = (row: number, cell: number, value: any, columnDef: any, dataContext: any) =>\r\n  value ? `<i class=\"fa fa-fire\" aria-hidden=\"true\"></i>` : '<i class=\"fa fa-snowflake-o\" aria-hidden=\"true\"></i>';\r\n\r\n@Component({\r\n  templateUrl: './grid-formatter.component.html',\r\n  styleUrls: ['./grid-formatter.component.scss']\r\n})\r\nexport class GridFormatterComponent implements OnInit {\r\n  title = 'Grid with Formatters';\r\n  subTitle = 'grid auto-resize, multi-column sort and custom/SlickGrid Formatters';\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      {id: 'title', name: 'Title', field: 'title', sortable: true, type: FieldType.string},\r\n      {id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true, type: FieldType.number},\r\n      {id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, sortable: true},\r\n      {id: 'percent2', name: '% Complete', field: 'percentComplete2', formatter: Formatters.progressBar, type: FieldType.number, sortable: true},\r\n      {id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, sortable: true, type: FieldType.dateIso },\r\n      {id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso, sortable: true, type: FieldType.date },\r\n      {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', formatter: myCustomCheckboxFormatter, type: FieldType.number, sortable: true}\r\n    ];\r\n    this.gridOptions = {\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableCellNavigation: true\r\n    };\r\n\r\n    // mock a dataset\r\n    this.dataset = [];\r\n    for (let i = 0; i < 1000; i++) {\r\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\r\n      const randomMonth = Math.floor(Math.random() * 11);\r\n      const randomDay = Math.floor((Math.random() * 29));\r\n      const randomPercent = Math.round(Math.random() * 100);\r\n\r\n      this.dataset[i] = {\r\n        id: i,\r\n        title: 'Task ' + i,\r\n        duration: Math.round(Math.random() * 100) + '',\r\n        percentComplete: randomPercent,\r\n        percentComplete2: randomPercent,\r\n        percentCompleteNumber: randomPercent,\r\n        start: new Date(randomYear, randomMonth, randomDay),\r\n        finish: new Date(randomYear, (randomMonth + 1), randomDay),\r\n        effortDriven: (i % 5 === 0)\r\n      };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{title}}</h2>\\r\\n  <div class=\\\"subtitle row\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div [class]=\\\"status.class\\\" role=\\\"alert\\\">\\r\\n        <strong>Status: </strong> {{status.text}}\\r\\n        <span [hidden]=\\\"!processing\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-spin fa-lg fa-fw\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"form-inline\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"radioWithCursor\\\">With Cursor</label> :\\r\\n        <span id=\\\"radioWithCursor\\\">\\r\\n          <label class=\\\"radio-inline control-label\\\" for=\\\"radioTrue\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioTrue\\\" value=\\\"true\\\" (change)=\\\"onWithCursorChange(true)\\\">\\r\\n            True\\r\\n          </label>\\r\\n          <label class=\\\"radio-inline control-label\\\" for=\\\"radioFalse\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioFalse\\\" checked value=\\\"false\\\" (change)=\\\"onWithCursorChange(false)\\\">\\r\\n            False\\r\\n          </label>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"alert alert-info\\\">\\r\\n        <strong>GraphQL Query:</strong>\\r\\n        <div [innerHTML]=\\\"graphqlQuery\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid4\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.html\n// module id = ../../../../../src/app/examples/grid-graphql.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.scss\n// module id = ../../../../../src/app/examples/grid-graphql.component.scss\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter, Pipe, PipeTransform } from '@angular/core';\r\nimport { CaseType, Column, FieldType, Formatters, FormElementType, GridOption, GraphqlService } from 'angular-slickgrid';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst defaultPageSize = 20;\r\nconst sampleDataRoot = '/assets/data';\r\n\r\n\r\n@Component({\r\n  templateUrl: './grid-graphql.component.html',\r\n  styleUrls: ['./grid-graphql.component.scss']\r\n})\r\nexport class GridGraphqlComponent implements OnInit {\r\n  title = 'Grid connected to Backend Server with GraphQL';\r\n  subTitle = `\r\n    Sorting/Paging connected to a Backend GraphQL Service.\r\n    <br/>\r\n    <ul class=\"small\">\r\n      <li>Only \"Name\" field is sortable for the demo (because we use JSON files), however \"multiColumnSort: true\" is also supported</li>\r\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\r\n      <ul>\r\n        <li>The (*) can be used as startsWith (ex.: \"abc*\" => startsWith \"abc\") / endsWith (ex.: \"*xyz\" => endsWith \"xyz\")</li>\r\n        <li>The other operators can be used on column type number for example: \">=100\" (bigger or equal than 100)</li>\r\n      </ul>\r\n    </ul>\r\n  `;\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset = [];\r\n\r\n  graphqlQuery = '';\r\n  processing = false;\r\n  status = { text: '', class: '' };\r\n  isWithCursor = false;\r\n\r\n  constructor(private http: HttpClient, private graphqlService: GraphqlService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      { id: 'name', name: 'Name', field: 'name', filterable: true, sortable: true, type: FieldType.string },\r\n      { id: 'gender', name: 'Gender', field: 'gender', filterable: true, sortable: false,\r\n        filter: {\r\n          searchTerm: '', // default selection\r\n          type: FormElementType.select,\r\n          selectOptions: [ { value: '', label: '' }, { value: 'male', label: 'male' }, { value: 'female', label: 'female' } ]\r\n        }\r\n      },\r\n      { id: 'company', name: 'Company', field: 'company' }\r\n    ];\r\n\r\n    this.gridOptions = {\r\n      enableAutoResize: true,\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableFiltering: true,\r\n      enableCellNavigation: true,\r\n      enablePagination: true,\r\n      pagination: {\r\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\r\n        pageSize: defaultPageSize,\r\n        totalItems: 0\r\n      },\r\n      onFilterChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.graphqlService.onFilterChanged(event, args);\r\n        // this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      },\r\n      onPaginationChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.graphqlService.onPaginationChanged(event, args);\r\n        this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      },\r\n      onSortChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.graphqlService.onSortChanged(event, args);\r\n        // this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      }\r\n    };\r\n\r\n    const paginationOption = this.getPaginationOption(this.isWithCursor);\r\n    this.graphqlService.initOptions(paginationOption);\r\n\r\n    // get the data from backend on page load\r\n    this.displaySpinner(true);\r\n    this.getCustomerApiCall(this.graphqlService.buildQuery()).then((data) => this.getCustomerCallback(data));\r\n  }\r\n\r\n  displaySpinner(isProcessing) {\r\n    this.processing = isProcessing;\r\n    this.status = (isProcessing)\r\n      ? { text: 'processing...', class: 'alert alert-danger' }\r\n      : { text: 'done', class: 'alert alert-success' };\r\n  }\r\n\r\n  onWithCursorChange(isWithCursor) {\r\n    this.isWithCursor = isWithCursor;\r\n    const paginationOption = this.getPaginationOption(isWithCursor);\r\n    this.graphqlService.initOptions(paginationOption);\r\n    this.graphqlQuery = this.graphqlService.buildQuery();\r\n  }\r\n\r\n  getPaginationOption(isWithCursor: boolean) {\r\n    let paginationOption;\r\n    const columnIds = Array.isArray(this.columnDefinitions) ? this.columnDefinitions.map((column) => column.field) : [];\r\n\r\n    // Slickgrid also requires the \"id\" field\r\n    columnIds.push('id');\r\n\r\n    if (isWithCursor) {\r\n      // with cursor, paginationOptions can be: { first, last, after, before }\r\n      paginationOption = {\r\n        datasetName: 'users',\r\n        dataFilters: columnIds,\r\n        isWithCursor: true,\r\n        paginationOptions: {\r\n          first: defaultPageSize\r\n        }\r\n      };\r\n    } else {\r\n      // without cursor, paginationOptions can be: { first, last, offset }\r\n      paginationOption = {\r\n        datasetName: 'users',\r\n        dataFilters: columnIds,\r\n        isWithCursor: false,\r\n        paginationOptions: {\r\n          first: defaultPageSize,\r\n          offset: 0\r\n        }\r\n      };\r\n    }\r\n    return paginationOption;\r\n  }\r\n\r\n  getCustomerCallback(data) {\r\n    this.displaySpinner(false);\r\n\r\n    this.dataset = data['items'];\r\n    this.graphqlQuery = data['query'];\r\n\r\n    // totalItems property needs to be filled for pagination to work correctly\r\n    this.gridOptions.pagination.totalItems = data['totalRecordCount'];\r\n  }\r\n\r\n  getCustomerApiCall(query) {\r\n    // in your case, you will call your WebAPI function (wich needs to return a Promise)\r\n    // for the demo purpose, we will call a mock WebAPI function\r\n    return new Promise((resolve, reject) => {\r\n      this.graphqlQuery = this.graphqlService.buildQuery();\r\n      resolve({ items: [], totalRecordCount: 100, query: query });\r\n    });\r\n    // return this.getCustomerDataApiMock(query);\r\n  }\r\n\r\n  /** This function is only here to mock a WebAPI call (since we are using a JSON file for the demo)\r\n   *  in your case the getCustomer() should be a WebAPI function returning a Promise\r\n   */\r\n  getCustomerDataApiMock(query) {\r\n    // the mock is returning a Promise, just like a WebAPI typically does\r\n    return new Promise((resolve, reject) => {\r\n      const queryParams = query.toLowerCase().split('&');\r\n      let top: number;\r\n      let skip = 0;\r\n      let orderBy = '';\r\n      let countTotalItems = 100;\r\n      let columnFilters = {};\r\n\r\n      for (const param of queryParams) {\r\n        if (param.includes('$top=')) {\r\n          top = +(param.substring('$top='.length));\r\n        }\r\n        if (param.includes('$skip=')) {\r\n          skip = +(param.substring('$skip='.length));\r\n        }\r\n        if (param.includes('$orderby=')) {\r\n          orderBy = param.substring('$orderby='.length);\r\n        }\r\n        if (param.includes('$filter=')) {\r\n          const filterBy = param.substring('$filter='.length);\r\n          if (filterBy.includes('substringof')) {\r\n            const filterMatch = filterBy.match(/substringof\\('(.*?)',([a-zA-Z ]*)/);\r\n            const fieldName = filterMatch[2].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'substring',\r\n              term: filterMatch[1].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('eq')) {\r\n            const filterMatch = filterBy.match(/([a-zA-Z ]*) eq '(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'equal',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('startswith')) {\r\n            const filterMatch = filterBy.match(/startswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'starts',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('endswith')) {\r\n            const filterMatch = filterBy.match(/endswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'ends',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      const sort = orderBy.includes('asc')\r\n        ? 'ASC'\r\n        : orderBy.includes('desc')\r\n          ? 'DESC'\r\n          : '';\r\n\r\n      let url;\r\n      switch (sort) {\r\n        case 'ASC':\r\n          url = `${sampleDataRoot}/customers_100_ASC.json`;\r\n          break;\r\n        case 'DESC':\r\n          url = `${sampleDataRoot}/customers_100_DESC.json`;\r\n          break;\r\n        default:\r\n          url = `${sampleDataRoot}/customers_100.json`;\r\n          break;\r\n      }\r\n\r\n      this.http.get(url).subscribe(data => {\r\n        const dataArray = <any[]> data;\r\n\r\n        // Read the result field from the JSON response.\r\n        const firstRow = skip;\r\n        let filteredData = dataArray;\r\n        if (columnFilters) {\r\n          for (const columnId in columnFilters) {\r\n            if (columnFilters.hasOwnProperty(columnId)) {\r\n              filteredData = filteredData.filter(column => {\r\n                const filterType = columnFilters[columnId].type;\r\n                const searchTerm = columnFilters[columnId].term;\r\n                switch (filterType) {\r\n                  case 'equal': return column[columnId] === searchTerm;\r\n                  case 'ends': return column[columnId].toLowerCase().endsWith(searchTerm);\r\n                  case 'starts': return column[columnId].toLowerCase().startsWith(searchTerm);\r\n                  case 'substring': return column[columnId].toLowerCase().includes(searchTerm);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          countTotalItems = filteredData.length;\r\n        }\r\n        const updatedData = filteredData.slice(firstRow, firstRow + top);\r\n\r\n        setTimeout(() => {\r\n          resolve({ items: updatedData, totalRecordCount: countTotalItems, query: query });\r\n        }, 500);\r\n      });\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{title}}</h2>\\r\\n  <div class=\\\"subtitle row\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div [class]=\\\"status.class\\\" role=\\\"alert\\\">\\r\\n        <strong>Status: </strong> {{status.text}}\\r\\n        <span [hidden]=\\\"!processing\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-spin fa-lg fa-fw\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"alert alert-info\\\">\\r\\n        <strong>OData Query:</strong> {{odataQuery}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid4\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.html\n// module id = ../../../../../src/app/examples/grid-odata.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".slick-viewport {\\n  opacity: 0.9; }\\n\\n.slick-headerrow {\\n  overflow: unset !important; }\\n\\n.slick-headerrow-column, .slick-headerrow-columns {\\n  overflow: unset; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.scss\n// module id = ../../../../../src/app/examples/grid-odata.component.scss\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { CaseType, FieldType, Formatters, Column, Formatter, FormElementType, GridOption, GridOdataService } from 'angular-slickgrid';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst defaultPageSize = 20;\r\nconst sampleDataRoot = '/assets/data';\r\n\r\n@Component({\r\n  templateUrl: './grid-odata.component.html',\r\n  styleUrls: ['./grid-odata.component.scss']\r\n})\r\nexport class GridOdataComponent implements OnInit {\r\n  title = 'Grid connected to Backend Server with OData';\r\n  subTitle = `\r\n    Sorting/Paging connected to a Backend OData Service.\r\n    <br/>\r\n    <ul class=\"small\">\r\n      <li>Only \"Name\" field is sortable for the demo (because we use JSON files), however \"multiColumnSort: true\" is also supported</li>\r\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\r\n      <ul>\r\n        <li>The (*) can be used as startsWith (ex.: \"abc*\" => startsWith \"abc\") / endsWith (ex.: \"*xyz\" => endsWith \"xyz\")</li>\r\n        <li>The other operators can be used on column type number for example: \">=100\" (bigger or equal than 100)</li>\r\n      </ul>\r\n      <li>OData Service could be replaced by other Service type in the future (GraphQL or whichever you provide)</li>\r\n    </ul>\r\n  `;\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset = [];\r\n\r\n  odataQuery = '';\r\n  processing = false;\r\n  status = { text: '', class: '' };\r\n\r\n  constructor(private http: HttpClient, private odataService: GridOdataService) {\r\n    this.odataService.initOptions({\r\n      caseType: CaseType.pascalCase,\r\n      top: defaultPageSize\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      { id: 'name', name: 'Name', field: 'name', filterable: true, sortable: true, type: FieldType.string },\r\n      { id: 'gender', name: 'Gender', field: 'gender', filterable: true, sortable: false,\r\n        filter: {\r\n          searchTerm: '', // default selection\r\n          type: FormElementType.select,\r\n          selectOptions: [ { value: '', label: '' }, { value: 'male', label: 'male' }, { value: 'female', label: 'female' } ]\r\n        }\r\n      },\r\n      { id: 'company', name: 'Company', field: 'company' }\r\n    ];\r\n\r\n    this.gridOptions = {\r\n      enableAutoResize: true,\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableFiltering: true,\r\n      enableCellNavigation: true,\r\n      enablePagination: true,\r\n      pagination: {\r\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\r\n        pageSize: defaultPageSize,\r\n        totalItems: 0\r\n      },\r\n      onFilterChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.odataService.onFilterChanged(event, args);\r\n        this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      },\r\n      onPaginationChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.odataService.onPaginationChanged(event, args);\r\n        this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      },\r\n      onSortChanged: (event, args) => {\r\n        this.displaySpinner(true);\r\n        const query = this.odataService.onSortChanged(event, args);\r\n        this.getCustomerApiCall(query).then((data) => this.getCustomerCallback(data));\r\n      }\r\n    };\r\n\r\n    // get the data from backend on page load\r\n    this.displaySpinner(true);\r\n    this.getCustomerApiCall(this.odataService.buildQuery()).then((data) => this.getCustomerCallback(data));\r\n  }\r\n\r\n  displaySpinner(isProcessing) {\r\n    this.processing = isProcessing;\r\n    this.status = (isProcessing)\r\n      ? { text: 'processing...', class: 'alert alert-danger' }\r\n      : { text: 'done', class: 'alert alert-success' };\r\n  }\r\n\r\n  getCustomerCallback(data) {\r\n    this.displaySpinner(false);\r\n\r\n    this.dataset = data['items'];\r\n    this.odataQuery = data['query'];\r\n\r\n    // totalItems property needs to be filled for pagination to work correctly\r\n    this.gridOptions.pagination.totalItems = data['totalRecordCount'];\r\n  }\r\n\r\n  getCustomerApiCall(query) {\r\n    // in your case, you will call your WebAPI function (wich needs to return a Promise)\r\n    // for the demo purpose, we will call a mock WebAPI function\r\n    return this.getCustomerDataApiMock(query);\r\n  }\r\n\r\n  /** This function is only here to mock a WebAPI call (since we are using a JSON file for the demo)\r\n   *  in your case the getCustomer() should be a WebAPI function returning a Promise\r\n   */\r\n  getCustomerDataApiMock(query) {\r\n    // the mock is returning a Promise, just like a WebAPI typically does\r\n    return new Promise((resolve, reject) => {\r\n      const queryParams = query.toLowerCase().split('&');\r\n      let top: number;\r\n      let skip = 0;\r\n      let orderBy = '';\r\n      let countTotalItems = 100;\r\n      let columnFilters = {};\r\n\r\n      for (const param of queryParams) {\r\n        if (param.includes('$top=')) {\r\n          top = +(param.substring('$top='.length));\r\n        }\r\n        if (param.includes('$skip=')) {\r\n          skip = +(param.substring('$skip='.length));\r\n        }\r\n        if (param.includes('$orderby=')) {\r\n          orderBy = param.substring('$orderby='.length);\r\n        }\r\n        if (param.includes('$filter=')) {\r\n          const filterBy = param.substring('$filter='.length);\r\n          if (filterBy.includes('substringof')) {\r\n            const filterMatch = filterBy.match(/substringof\\('(.*?)',([a-zA-Z ]*)/);\r\n            const fieldName = filterMatch[2].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'substring',\r\n              term: filterMatch[1].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('eq')) {\r\n            const filterMatch = filterBy.match(/([a-zA-Z ]*) eq '(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'equal',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('startswith')) {\r\n            const filterMatch = filterBy.match(/startswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'starts',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n          if (filterBy.includes('endswith')) {\r\n            const filterMatch = filterBy.match(/endswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\r\n            const fieldName = filterMatch[1].trim();\r\n            columnFilters[fieldName] = {\r\n              type: 'ends',\r\n              term: filterMatch[2].trim()\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      const sort = orderBy.includes('asc')\r\n        ? 'ASC'\r\n        : orderBy.includes('desc')\r\n          ? 'DESC'\r\n          : '';\r\n\r\n      let url;\r\n      switch (sort) {\r\n        case 'ASC':\r\n          url = `${sampleDataRoot}/customers_100_ASC.json`;\r\n          break;\r\n        case 'DESC':\r\n          url = `${sampleDataRoot}/customers_100_DESC.json`;\r\n          break;\r\n        default:\r\n          url = `${sampleDataRoot}/customers_100.json`;\r\n          break;\r\n      }\r\n\r\n      this.http.get(url).subscribe(data => {\r\n        const dataArray = <any[]> data;\r\n\r\n        // Read the result field from the JSON response.\r\n        const firstRow = skip;\r\n        let filteredData = dataArray;\r\n        if (columnFilters) {\r\n          for (const columnId in columnFilters) {\r\n            if (columnFilters.hasOwnProperty(columnId)) {\r\n              filteredData = filteredData.filter(column => {\r\n                const filterType = columnFilters[columnId].type;\r\n                const searchTerm = columnFilters[columnId].term;\r\n                switch (filterType) {\r\n                  case 'equal': return column[columnId] === searchTerm;\r\n                  case 'ends': return column[columnId].toLowerCase().endsWith(searchTerm);\r\n                  case 'starts': return column[columnId].toLowerCase().startsWith(searchTerm);\r\n                  case 'substring': return column[columnId].toLowerCase().includes(searchTerm);\r\n                }\r\n              });\r\n            }\r\n          }\r\n          countTotalItems = filteredData.length;\r\n        }\r\n        const updatedData = filteredData.slice(firstRow, firstRow + top);\r\n\r\n        setTimeout(() => {\r\n          resolve({ items: updatedData, totalRecordCount: countTotalItems, query: query });\r\n        }, 500);\r\n      });\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/main.ts"],"sourceRoot":"webpack:///"}