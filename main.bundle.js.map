{"version":3,"sources":["C:/sourcecode/Angular-Slickgrid-PackageTest/src/$_gendir lazy","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app-routing.module.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.scss","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.module.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-editor.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-editor.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headerbutton.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headerbutton.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headermenu.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headermenu.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-menu.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-menu.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-rowselection.component.html","C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-rowselection.component.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/environments/environment.ts","C:/sourcecode/Angular-Slickgrid-PackageTest/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { GridBasicComponent } from './examples/grid-basic.component';\nimport { GridClientSideComponent } from './examples/grid-clientside.component';\nimport { GridEditorComponent } from './examples/grid-editor.component';\nimport { GridFormatterComponent } from './examples/grid-formatter.component';\nimport { GridGraphqlComponent } from './examples/grid-graphql.component';\nimport { GridHeaderButtonComponent } from './examples/grid-headerbutton.component';\nimport { GridHeaderMenuComponent } from './examples/grid-headermenu.component';\nimport { GridMenuComponent } from './examples/grid-menu.component';\nimport { GridOdataComponent } from './examples/grid-odata.component';\nimport { GridRowSelectionComponent } from './examples/grid-rowselection.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'basic', component: GridBasicComponent },\n  { path: 'editor', component: GridEditorComponent },\n  { path: 'formatter', component: GridFormatterComponent },\n  { path: 'headerbutton', component: GridHeaderButtonComponent },\n  { path: 'headermenu', component: GridHeaderMenuComponent },\n  { path: 'gridgraphql', component: GridGraphqlComponent },\n  { path: 'gridmenu', component: GridMenuComponent },\n  { path: 'clientside', component: GridClientSideComponent },\n  { path: 'odata', component: GridOdataComponent },\n  { path: 'selection', component: GridRowSelectionComponent },\n  { path: '', redirectTo: '/basic', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule],\n})\nexport class AppRoutingRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app-routing.module.ts","module.exports = \"<nav class=\\\"navbar navbar-default navbar-fixed-top\\\" role=\\\"navigation\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#skeleton-navigation-navbar-collapse\\\">\\n      <span class=\\\"sr-only\\\">Toggle Navigation</span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" href=\\\"https://github.com/ghiscoding/Angular-Slickgrid\\\">\\n      <i class=\\\"fa fa-home\\\"></i>\\n      <span>{{title}}</span>\\n    </a>\\n  </div>\\n</nav>\\n\\n<section class=\\\"au-animate body-content\\\">\\n  <div class=\\\"col-sm-3 col-md-2\\\">\\n    <ul class=\\\"nav nav-pills nav-stacked\\\">\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/basic']\\\">1- Basic Grid</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/formatter']\\\">2- Formatters</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/editor']\\\">3- Editors</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/clientside']\\\">4- Client Side Sort/Filter</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/odata']\\\">5- Backend Server with OData</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/gridgraphql']\\\">6- Backend Server with GraphQL</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/headerbutton']\\\">7- Header Button Plugin</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/headermenu']\\\">8- Header Menu Plugin</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/gridmenu']\\\">9- Grid Menu (hamburger menu)</a>\\n      </li>\\n      <li routerLinkActive=\\\"active\\\">\\n        <a [routerLink]=\\\"['/selection']\\\">10- Row Selection</a>\\n      </li>\\n    </ul>\\n  </div>\\n</section>\\n<div id=\\\"demo-container\\\" class=\\\"col-sm-9\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".body-content {\\n  margin-top: 60px; }\\n\\n.red {\\n  color: red; }\\n\\n.faded {\\n  opacity: 0.2; }\\n\\n.faded:hover {\\n  opacity: 0.5; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular-Slickgrid';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.component.ts","import { GridRowSelectionComponent } from './examples/grid-rowselection.component';\r\nimport { AppRoutingRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { GridBasicComponent } from './examples/grid-basic.component';\r\nimport { GridClientSideComponent } from './examples/grid-clientside.component';\r\nimport { GridEditorComponent } from './examples/grid-editor.component';\r\nimport { GridFormatterComponent } from './examples/grid-formatter.component';\r\nimport { GridGraphqlComponent } from './examples/grid-graphql.component';\r\nimport { GridHeaderMenuComponent } from './examples/grid-headermenu.component';\r\nimport { GridHeaderButtonComponent } from './examples/grid-headerbutton.component';\r\nimport { GridMenuComponent } from './examples/grid-menu.component';\r\nimport { GridOdataService } from 'angular-slickgrid';\r\nimport { GridOdataComponent } from './examples/grid-odata.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AngularSlickgridModule } from 'angular-slickgrid';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GridBasicComponent,\r\n    GridEditorComponent,\r\n    GridClientSideComponent,\r\n    GridFormatterComponent,\r\n    GridGraphqlComponent,\r\n    GridHeaderButtonComponent,\r\n    GridHeaderMenuComponent,\r\n    GridMenuComponent,\r\n    GridOdataComponent,\r\n    GridRowSelectionComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingRoutingModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AngularSlickgridModule\r\n  ],\r\n  providers: [GridOdataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/app.module.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid1\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\"\\r\\n            gridHeight=\\\"400\\\"\\r\\n            gridWidth=\\\"800\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.html\n// module id = ../../../../../src/app/examples/grid-basic.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Column, GridOption } from 'angular-slickgrid';\n\n// using external js modules in Angular\ndeclare var Slick: any;\n\n@Component({\n  templateUrl: './grid-basic.component.html'\n})\nexport class GridBasicComponent implements OnInit {\n  title = 'Example 1: Basic Grid';\n  subTitle = `\n    Basic Grid with fixed sizes (800 x 400) set by \"gridHeight\" &amp; \"gridWidth\"\n    <ul>\n      <li><a href=\"https://github.com/ghiscoding/angular-slickgrid/wiki/HOWTO---Step-by-Step\">Wiki HOWTO link</a></li>\n    </ul>\n  `;\n\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      { id: 'title', name: 'Title', field: 'title', sortable: true },\n      { id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true },\n      { id: '%', name: '% Complete', field: 'percentComplete', sortable: true },\n      { id: 'start', name: 'Start', field: 'start' },\n      { id: 'finish', name: 'Finish', field: 'finish' },\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', sortable: true }\n    ];\n    this.gridOptions = {\n      enableAutoResize: false\n    };\n\n    // mock a dataset\n    this.dataset = [];\n    for (let i = 0; i < 1000; i++) {\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\n      const randomMonth = Math.floor(Math.random() * 11);\n      const randomDay = Math.floor((Math.random() * 29));\n      const randomPercent = Math.round(Math.random() * 100);\n\n      this.dataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        start: `${randomMonth}/${randomDay}/${randomYear}`,\n        finish: `${randomMonth}/${randomDay}/${randomYear}`,\n        effortDriven: (i % 5 === 0)\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-basic.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <angular-slickgrid gridId=\\\"grid2\\\"\\r\\n              [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n              [gridOptions]=\\\"gridOptions\\\"\\r\\n              [dataset]=\\\"dataset\\\">\\r\\n    </angular-slickgrid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.html\n// module id = ../../../../../src/app/examples/grid-clientside.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Column, FieldType, Formatter, Formatters, FormElementType, GridOption } from 'angular-slickgrid';\n\nfunction randomBetween(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n@Component({\n  templateUrl: './grid-clientside.component.html'\n})\nexport class GridClientSideComponent implements OnInit {\n  title = 'Example 4: Client Side Sort/Filter';\n  subTitle = `\n    Sort/Filter on client side only using SlickGrid DataView (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/Sorting\">Wiki link</a>)\n    <br/>\n    <ul class=\"small\">\n      <li>Support multi-sort (by default), hold \"Shift\" key and click on the next column to sort.\n      <li>All column types support the following operators: (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>Example: >100 ... >=2001-01-01 ... >02/28/17</li>\n        <li><b>Note:</b> For filters to work properly (default is string), make sure to provide a FieldType (type is against the dataset, not the Formatter)</li>\n      </ul>\n      <li>Date Filters</li>\n      <ul>\n        <li>FieldType of dateUtc/date (from dataset) can use an extra option of \"filterSearchType\" to let user filter more easily. For example, in the \"UTC Date\" field below, you can type \"&gt;02/28/2017\", also when dealing with UTC you have to take the time difference in consideration.</li>\n      </ul>\n      <li>On String filters, (*) can be used as startsWith (Hello* => matches \"Hello Word\") ... endsWith (*Doe => matches: \"John Doe\")</li>\n    </ul>\n  `;\n\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      { id: 'title', name: 'Title', field: 'title', filterable: true, sortable: true, type: FieldType.string, minWidth: 100 },\n      { id: 'duration', name: 'Duration (days)', field: 'duration', filterable: true, sortable: true, type: FieldType.number, minWidth: 100 },\n      { id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, filterable: true, sortable: true, minWidth: 100 },\n      { id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, filterable: true, sortable: true, type: FieldType.date, minWidth: 100 },\n      { id: 'usDateShort', name: 'US Date Short', field: 'usDateShort', filterable: true, sortable: true, type: FieldType.dateUsShort, minWidth: 100 },\n      { id: 'utcDate', name: 'UTC Date', field: 'utcDate', formatter: Formatters.dateTimeIsoAmPm, filterable: true, sortable: true, type: FieldType.dateUtc, filterSearchType: FieldType.dateTimeIso, minWidth: 115 },\n      { id: 'utcDate2', name: 'UTC Date (filterSearchType: dateUS)', field: 'utcDate', filterable: true, sortable: true, type: FieldType.dateUtc, filterSearchType: FieldType.dateUs, minWidth: 115 },\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', maxWidth: 80, formatter: Formatters.checkmark, minWidth: 100,\n        type: FieldType.boolean,\n        sortable: true,\n        filterable: true,\n        filter: {\n          searchTerm: '', // default selection\n          type: FormElementType.select,\n          selectOptions: [ { value: '', label: '' }, { value: true, label: 'true' }, { value: false, label: 'false' } ]\n        }\n      }\n    ];\n    this.gridOptions = {\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      enableFiltering: true,\n      enableCellNavigation: true\n    };\n\n    // mock a dataset\n    this.dataset = [];\n    for (let i = 0; i < 1000; i++) {\n      const randomYear = randomBetween(2000, 2025);\n      const randomYearShort = randomBetween(10, 25);\n      const randomMonth = randomBetween(1, 12);\n      const randomMonthStr = (randomMonth < 10) ? `0${randomMonth}` : randomMonth;\n      const randomDay = randomBetween(10, 28);\n      const randomPercent = randomBetween(0, 100);\n      const randomHour = randomBetween(10, 23);\n      const randomTime = randomBetween(10, 59);\n\n      this.dataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        percentCompleteNumber: randomPercent,\n        start: new Date(randomYear, randomMonth, randomDay),          // provide a Date format\n        usDateShort: `${randomMonth}/${randomDay}/${randomYearShort}`, // provide a date US Short in the dataset\n        utcDate: `${randomYear}-${randomMonthStr}-${randomDay}T${randomHour}:${randomTime}:${randomTime}Z`,\n        effortDriven: (i % 3 === 0)\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-clientside.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n    <h2>{{title}}</h2>\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\n\\n    <div class=\\\"col-sm-4\\\">\\n        <label>autoEdit setting</label>\\n        <br/>\\n        <span id=\\\"radioAutoEdit\\\">\\n            <label class=\\\"radio-inline control-label\\\" for=\\\"radioTrue\\\">\\n                <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioTrue\\\" checked [value]=\\\"isAutoEdit\\\" (change)=\\\"setAutoEdit(true)\\\"> ON (single-click)\\n            </label>\\n            <label class=\\\"radio-inline control-label\\\" for=\\\"radioFalse\\\">\\n                <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioFalse\\\" [value]=\\\"isAutoEdit\\\" (change)=\\\"setAutoEdit(false)\\\"> OFF (double-click)\\n            </label>\\n        </span>\\n    </div>\\n\\n    <div class=\\\"col-sm-8\\\">\\n        <div class=\\\"alert alert-info\\\" *ngIf=\\\"updatedObject\\\">\\n            <strong>Update Object:</strong> {{updatedObject | json}}\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-sm-12\\\">\\n        <angular-slickgrid gridId=\\\"grid2\\\" (dataviewChanged)=\\\"dataviewReady($event)\\\" (gridChanged)=\\\"gridReady($event)\\\"\\n            [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\">\\n        </angular-slickgrid>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-editor.component.html\n// module id = ../../../../../src/app/examples/grid-editor.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { Column, Editors, Formatters, FieldType, Formatter, GridExtraService, GridExtraUtils, GridOption, OnEventArgs, ResizerService } from 'angular-slickgrid';\n\n@Component({\n  templateUrl: './grid-editor.component.html'\n})\nexport class GridEditorComponent implements OnInit {\n  title = 'Example 3: Editors';\n  subTitle = `\n  Grid with Inline Editors and onCellClick actions (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/Editors\">Wiki link</a>).\n  <ul>\n    <li>When using \"enableCellNavigation: true\", clicking on a cell will automatically make it active &amp; selected.\n    <ul><li>If you don't want this behavior, then you should disable \"enableCellNavigation\"</li></ul>\n    <li>Inline Editors requires \"enableCellNavigation: true\" (not sure why though)</li>\n  </ul>\n  `;\n\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n  isAutoEdit = true;\n  updatedObject: any;\n  gridObj: any;\n  dataviewObj: any;\n\n  constructor(private gridExtraService: GridExtraService, private resizer: ResizerService) {}\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      {\n        id: 'edit', field: 'id',\n        formatter: Formatters.editIcon,\n        minWidth: 30,\n        maxWidth: 30,\n        // use onCellClick OR grid.onClick.subscribe which you can see down below\n        onCellClick: (args: OnEventArgs) => {\n          console.log(args);\n          alert(`Editing: ${args.dataContext.title}`);\n          this.gridExtraService.highlightRow(args.row, 1500);\n          this.gridExtraService.setSelectedRow(args.row);\n        }\n      },\n      {\n        id: 'delete', field: 'id',\n        formatter: Formatters.deleteIcon,\n        minWidth: 30,\n        maxWidth: 30,\n        // use onCellClick OR grid.onClick.subscribe which you can see down below\n        onCellClick: (args: OnEventArgs) => {\n          console.log(args);\n          if (confirm('Are you sure?')) {\n            this.dataviewObj.deleteItem(args.dataContext.id);\n            this.dataviewObj.refresh();\n          }\n        }\n      },\n      { id: 'title', name: 'Title', field: 'title', sortable: true, type: FieldType.string, editor: Editors.longText, minWidth: 100 },\n      { id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true, type: FieldType.number, editor: Editors.text, minWidth: 100 },\n      { id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, editor: Editors.integer, minWidth: 100 },\n      { id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, sortable: true, type: FieldType.date, minWidth: 100 },\n      { id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso, sortable: true, type: FieldType.date, minWidth: 100 },\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', formatter: Formatters.checkmark, type: FieldType.number, editor: Editors.checkbox, minWidth: 100 }\n    ];\n\n    this.gridOptions = {\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      editable: true,\n      enableColumnPicker: true,\n      enableCellNavigation: true,\n      asyncEditorLoading: false,\n      autoEdit: this.isAutoEdit\n    };\n\n    // mock a dataset\n    let mockedDataset = [];\n    for (let i = 0; i < 1000; i++) {\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\n      const randomMonth = Math.floor(Math.random() * 11);\n      const randomDay = Math.floor((Math.random() * 29));\n      const randomPercent = Math.round(Math.random() * 100);\n\n      mockedDataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        percentCompleteNumber: randomPercent,\n        start: new Date(randomYear, randomMonth, randomDay),\n        finish: new Date(randomYear, (randomMonth + 1), randomDay),\n        effortDriven: (i % 5 === 0)\n      };\n    }\n    this.dataset = mockedDataset;\n  }\n\n  gridReady(grid) {\n    this.gridObj = grid;\n\n    grid.onCellChange.subscribe((e, args) => {\n      console.log('onCellChange', args);\n      this.updatedObject = args.item;\n      this.resizer.resizeGrid(this.gridObj, this.gridOptions, 10);\n    });\n\n    // You could also subscribe to grid.onClick\n    // Note that if you had already setup \"onCellClick\" in the column definition, you cannot use grid.onClick\n    grid.onClick.subscribe((e, args) => {\n      const column = GridExtraUtils.getColumnDefinitionAndData(args);\n      console.log('onClick', args, column);\n      if (column.columnDef.id === 'edit') {\n        alert('open a modal window to edit: ' + column.dataContext.title);\n\n        // highlight the row, to customize the color, you can change the SASS variable $row-highlight-background-color\n        this.gridExtraService.highlightRow(args.row, 1500);\n\n        // you could also select the row, when using \"enableCellNavigation: true\", it automatically selects the row\n        // this.gridExtraService.setSelectedRow(args.row);\n      } else if (column.columnDef.id === 'delete') {\n        if (confirm('Are you sure?')) {\n          this.dataviewObj.deleteItem(column.dataContext.id);\n          this.dataviewObj.refresh();\n        }\n      }\n    });\n  }\n\n  dataviewReady(dataview) {\n    this.dataviewObj = dataview;\n  }\n\n  setAutoEdit(isAutoEdit) {\n    this.isAutoEdit = isAutoEdit;\n    this.gridObj.setOptions({ autoEdit: isAutoEdit }); // change the grid option dynamically\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-editor.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <angular-slickgrid gridId=\\\"grid2\\\"\\r\\n              [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n              [gridOptions]=\\\"gridOptions\\\"\\r\\n              [dataset]=\\\"dataset\\\">\\r\\n    </angular-slickgrid>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.html\n// module id = ../../../../../src/app/examples/grid-formatter.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Column, FieldType, Formatter, Formatters, GridOption } from 'angular-slickgrid';\n\n// create my custom Formatter with the Formatter type\nconst myCustomCheckboxFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) =>\n  value ? `<i class=\"fa fa-fire\" aria-hidden=\"true\"></i>` : '<i class=\"fa fa-snowflake-o\" aria-hidden=\"true\"></i>';\n\n@Component({\n  templateUrl: './grid-formatter.component.html'\n})\nexport class GridFormatterComponent implements OnInit {\n  title = 'Example 2: Grid with Formatters';\n  subTitle = `\n  Grid with Custom and/or included Slickgrid Formatters (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/Formatters\">Wiki link</a>).\n  `;\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      {id: 'title', name: 'Title', field: 'title', sortable: true, type: FieldType.string, minWidth: 100 },\n      {id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true, type: FieldType.number, minWidth: 100 },\n      {id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, sortable: true, minWidth: 100 },\n      {id: 'percent2', name: '% Complete', field: 'percentComplete2', formatter: Formatters.progressBar, type: FieldType.number, sortable: true, minWidth: 100 },\n      {id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, sortable: true, type: FieldType.dateIso, minWidth: 100 },\n      {id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso, sortable: true, type: FieldType.date, minWidth: 100 },\n      {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', formatter: myCustomCheckboxFormatter, type: FieldType.number, sortable: true, minWidth: 100 }\n    ];\n    this.gridOptions = {\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      enableCellNavigation: false\n    };\n\n    // mock a dataset\n    this.dataset = [];\n    for (let i = 0; i < 1000; i++) {\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\n      const randomMonth = Math.floor(Math.random() * 11);\n      const randomDay = Math.floor((Math.random() * 29));\n      const randomPercent = Math.round(Math.random() * 100);\n\n      this.dataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        percentComplete2: randomPercent,\n        percentCompleteNumber: randomPercent,\n        start: new Date(randomYear, randomMonth, randomDay),\n        finish: new Date(randomYear, (randomMonth + 1), randomDay),\n        effortDriven: (i % 5 === 0)\n      };\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-formatter.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{title}}</h2>\\r\\n  <div class=\\\"subtitle row\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div [class]=\\\"status.class\\\" role=\\\"alert\\\">\\r\\n        <strong>Status: </strong> {{status.text}}\\r\\n        <span [hidden]=\\\"!processing\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-spin fa-lg fa-fw\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"form-inline\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"radioWithCursor\\\">With Cursor</label> :\\r\\n        <span id=\\\"radioWithCursor\\\">\\r\\n          <label class=\\\"radio-inline control-label\\\" for=\\\"radioTrue\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioTrue\\\" value=\\\"true\\\" (change)=\\\"onWithCursorChange(true)\\\">\\r\\n            True\\r\\n          </label>\\r\\n          <label class=\\\"radio-inline control-label\\\" for=\\\"radioFalse\\\">\\r\\n            <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioFalse\\\" checked value=\\\"false\\\" (change)=\\\"onWithCursorChange(false)\\\">\\r\\n            False\\r\\n          </label>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"alert alert-info\\\">\\r\\n        <strong>GraphQL Query:</strong>\\r\\n        <div [innerHTML]=\\\"graphqlQuery\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid4\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\"\\r\\n            gridHeight=\\\"250\\\"\\r\\n            gridWidth=\\\"800\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.html\n// module id = ../../../../../src/app/examples/grid-graphql.component.html\n// module chunks = main","import { Component, EventEmitter, Injectable, Input, OnInit, Output, Pipe, PipeTransform } from '@angular/core';\nimport { CaseType, Column, FieldType, Formatters, FormElementType, GraphqlService, GridOption } from 'angular-slickgrid';\nimport { HttpClient } from '@angular/common/http';\n\nconst defaultPageSize = 20;\nconst sampleDataRoot = '/assets/data';\n\n@Component({\n  templateUrl: './grid-graphql.component.html'\n})\n@Injectable()\nexport class GridGraphqlComponent implements OnInit {\n  title = 'Example 6: Grid connected to Backend Server with GraphQL';\n  subTitle = `\n    Sorting/Paging connected to a Backend GraphQL Service (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/GraphQL\">Wiki link</a>).\n    <br/>\n    <ul class=\"small\">\n      <li><span class=\"red\">(*) NO DATA SHOWING</span> - just change Filters &amp; Pages and look at the \"GraphQL Query\" changing :)</li>\n      <li>Only \"Name\" field is sortable for the demo (because we use JSON files), however \"multiColumnSort: true\" is also supported</li>\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>The (*) can be used as startsWith (ex.: \"abc*\" => startsWith \"abc\") / endsWith (ex.: \"*xyz\" => endsWith \"xyz\")</li>\n        <li>The other operators can be used on column type number for example: \">=100\" (bigger or equal than 100)</li>\n      </ul>\n    </ul>\n  `;\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset = [];\n\n  graphqlQuery = '';\n  processing = false;\n  status = { text: '', class: '' };\n  isWithCursor = false;\n\n  constructor(private http: HttpClient, private graphqlService: GraphqlService) {\n  }\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      { id: 'name', name: 'Name', field: 'name', filterable: true, sortable: true, type: FieldType.string, minWidth: 100 },\n      { id: 'gender', name: 'Gender', field: 'gender', filterable: true, sortable: true, minWidth: 100,\n        filter: {\n          searchTerm: '', // default selection\n          type: FormElementType.select,\n          selectOptions: [ { value: '', label: '' }, { value: 'male', label: 'male' }, { value: 'female', label: 'female' } ]\n        }\n      },\n      { id: 'company', name: 'Company', field: 'company', minWidth: 100 }\n    ];\n\n    this.gridOptions = {\n      enableAutoResize: false,\n      enableFiltering: true,\n      enableCellNavigation: true,\n      enablePagination: true,\n      pagination: {\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\n        pageSize: defaultPageSize,\n        totalItems: 0\n      },\n      onBackendEventApi: {\n        onInit: (query) => this.getCustomerApiCall(query),\n        preProcess: () => this.displaySpinner(true),\n        process: (query) => this.getCustomerApiCall(query),\n        postProcess: (response) => {\n          this.displaySpinner(false);\n          this.getCustomerCallback(response);\n        },\n        filterTypingDebounce: 700,\n        service: this.graphqlService\n      }\n    };\n\n    const paginationOption = this.getPaginationOption(this.isWithCursor);\n    this.graphqlService.initOptions(paginationOption);\n  }\n\n  displaySpinner(isProcessing) {\n    this.processing = isProcessing;\n    this.status = (isProcessing)\n      ? { text: 'processing...', class: 'alert alert-danger' }\n      : { text: 'done', class: 'alert alert-success' };\n  }\n\n  filterChange() {\n    console.log('filter change');\n  }\n\n  filterChangeAfter() {\n    console.log('after filter change');\n    this.displaySpinner(false);\n  }\n\n  onWithCursorChange(isWithCursor) {\n    this.isWithCursor = isWithCursor;\n    const paginationOption = this.getPaginationOption(isWithCursor);\n    this.graphqlService.initOptions(paginationOption);\n    this.graphqlQuery = this.graphqlService.buildQuery();\n  }\n\n  getPaginationOption(isWithCursor: boolean) {\n    let paginationOption;\n    const columnIds = Array.isArray(this.columnDefinitions) ? this.columnDefinitions.map((column) => column.field) : [];\n\n    // Slickgrid also requires the \"id\" field\n    columnIds.push('id');\n\n    if (isWithCursor) {\n      // with cursor, paginationOptions can be: { first, last, after, before }\n      paginationOption = {\n        datasetName: 'users',\n        dataFilters: columnIds,\n        isWithCursor: true,\n        paginationOptions: {\n          first: defaultPageSize\n        }\n      };\n    } else {\n      // without cursor, paginationOptions can be: { first, last, offset }\n      paginationOption = {\n        datasetName: 'users',\n        dataFilters: columnIds,\n        isWithCursor: false,\n        paginationOptions: {\n          first: defaultPageSize,\n          offset: 0\n        }\n      };\n    }\n    return paginationOption;\n  }\n\n  getCustomerCallback(data) {\n    this.displaySpinner(false);\n\n    this.dataset = data['items'];\n    this.graphqlQuery = data['query'];\n\n    // totalItems property needs to be filled for pagination to work correctly\n    this.gridOptions.pagination.totalItems = data['totalRecordCount'];\n  }\n\n  getCustomerApiCall(query) {\n    // in your case, you will call your WebAPI function (wich needs to return a Promise)\n    // for the demo purpose, we will call a mock WebAPI function\n    return new Promise((resolve, reject) => {\n      this.graphqlQuery = this.graphqlService.buildQuery();\n      setTimeout(() => {\n        resolve({ items: [], totalRecordCount: 100, query: query });\n      }, 500);\n    });\n    // return this.getCustomerDataApiMock(query);\n  }\n\n  /** This function is only here to mock a WebAPI call (since we are using a JSON file for the demo)\n   *  in your case the getCustomer() should be a WebAPI function returning a Promise\n   */\n  getCustomerDataApiMock(query) {\n    // the mock is returning a Promise, just like a WebAPI typically does\n    return new Promise((resolve, reject) => {\n      const queryParams = query.toLowerCase().split('&');\n      let top: number;\n      let skip = 0;\n      let orderBy = '';\n      let countTotalItems = 100;\n      let columnFilters = {};\n\n      for (const param of queryParams) {\n        if (param.includes('$top=')) {\n          top = +(param.substring('$top='.length));\n        }\n        if (param.includes('$skip=')) {\n          skip = +(param.substring('$skip='.length));\n        }\n        if (param.includes('$orderby=')) {\n          orderBy = param.substring('$orderby='.length);\n        }\n        if (param.includes('$filter=')) {\n          const filterBy = param.substring('$filter='.length);\n          if (filterBy.includes('substringof')) {\n            const filterMatch = filterBy.match(/substringof\\('(.*?)',([a-zA-Z ]*)/);\n            const fieldName = filterMatch[2].trim();\n            columnFilters[fieldName] = {\n              type: 'substring',\n              term: filterMatch[1].trim()\n            };\n          }\n          if (filterBy.includes('eq')) {\n            const filterMatch = filterBy.match(/([a-zA-Z ]*) eq '(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'equal',\n              term: filterMatch[2].trim()\n            };\n          }\n          if (filterBy.includes('startswith')) {\n            const filterMatch = filterBy.match(/startswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'starts',\n              term: filterMatch[2].trim()\n            };\n          }\n          if (filterBy.includes('endswith')) {\n            const filterMatch = filterBy.match(/endswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'ends',\n              term: filterMatch[2].trim()\n            };\n          }\n        }\n      }\n\n      const sort = orderBy.includes('asc')\n        ? 'ASC'\n        : orderBy.includes('desc')\n          ? 'DESC'\n          : '';\n\n      let url;\n      switch (sort) {\n        case 'ASC':\n          url = `${sampleDataRoot}/customers_100_ASC.json`;\n          break;\n        case 'DESC':\n          url = `${sampleDataRoot}/customers_100_DESC.json`;\n          break;\n        default:\n          url = `${sampleDataRoot}/customers_100.json`;\n          break;\n      }\n\n      this.http.get(url).subscribe(data => {\n        const dataArray = <any[]> data;\n\n        // Read the result field from the JSON response.\n        const firstRow = skip;\n        let filteredData = dataArray;\n        if (columnFilters) {\n          for (const columnId in columnFilters) {\n            if (columnFilters.hasOwnProperty(columnId)) {\n              filteredData = filteredData.filter(column => {\n                const filterType = columnFilters[columnId].type;\n                const searchTerm = columnFilters[columnId].term;\n                switch (filterType) {\n                  case 'equal': return column[columnId] === searchTerm;\n                  case 'ends': return column[columnId].toLowerCase().endsWith(searchTerm);\n                  case 'starts': return column[columnId].toLowerCase().startsWith(searchTerm);\n                  case 'substring': return column[columnId].toLowerCase().includes(searchTerm);\n                }\n              });\n            }\n          }\n          countTotalItems = filteredData.length;\n        }\n        const updatedData = filteredData.slice(firstRow, firstRow + top);\n\n        setTimeout(() => {\n          resolve({ items: updatedData, totalRecordCount: countTotalItems, query: query });\n        }, 500);\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-graphql.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <angular-slickgrid gridId=\\\"grid2\\\" (dataviewChanged)=\\\"dataviewReady($event)\\\" (gridChanged)=\\\"gridReady($event)\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\">\\r\\n        </angular-slickgrid>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headerbutton.component.html\n// module id = ../../../../../src/app/examples/grid-headerbutton.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Column, FieldType, Formatter, Formatters, GridOption } from 'angular-slickgrid';\r\nimport * as $ from 'jquery';\r\n\r\n// create a custom Formatter to highlight negative values in red\r\nconst columnsWithHighlightingById = {};\r\nconst highlightingFormatter = (row, cell, value, columnDef, dataContext) => {\r\n  if (columnsWithHighlightingById[columnDef.id] && value < 0) {\r\n    return `<div style=\"color:red; font-weight:bold;\">${value}</div>`;\r\n  } else {\r\n    return value;\r\n  }\r\n};\r\n\r\n@Component({\r\n  templateUrl: './grid-headerbutton.component.html'\r\n})\r\nexport class GridHeaderButtonComponent implements OnInit {\r\n  title = 'Example 7: Header Button Plugin';\r\n  subTitle = `\r\n    This example demonstrates using the <b>Slick.Plugins.HeaderButtons</b> plugin to easily add buttons to colum headers.\r\n    These buttons can be specified directly in the column definition, and are very easy to configure and use.\r\n    (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/SlickGrid-Controls-&-Plugins\">Wiki link</a>)\r\n    <ul>\r\n      <li>Resize the 1st column to see all icon/command</li>\r\n      <li>Mouse hover the 2nd column to see it's icon/command</li>\r\n      <li>For all the other columns, click on top-right red circle icon to enable highlight of negative numbers.</li>\r\n    </ul>\r\n  `;\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n  gridObj: any;\r\n  dataviewObj: any;\r\n  visibleColumns: Column[];\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [];\r\n    this.gridOptions = {\r\n      enableAutoResize: true,\r\n      enableHeaderButton: true,\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableFiltering: false,\r\n      enableCellNavigation: true,\r\n      headerButton: {\r\n        onCommand: (e, args) => {\r\n          const column = args.column;\r\n          const button = args.button;\r\n          const command = args.command;\r\n\r\n          if (command === 'toggle-highlight') {\r\n            if (button.cssClass === 'fa fa-circle red') {\r\n              delete columnsWithHighlightingById[column.id];\r\n              button.cssClass = 'fa fa-circle-o red faded';\r\n              button.tooltip = 'Highlight negative numbers.';\r\n            } else {\r\n              columnsWithHighlightingById[column.id] = true;\r\n              button.cssClass = 'fa fa-circle red';\r\n              button.tooltip = 'Remove highlight.';\r\n            }\r\n\r\n            this.gridObj.invalidate();\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    // Set up some test columns.\r\n    for (let i = 0; i < 9; i++) {\r\n      this.columnDefinitions.push({\r\n        id: i,\r\n        name: 'Column' + (i + 1),\r\n        field: i + '',\r\n        width: 100, // have the 2 first columns wider\r\n        sortable: true,\r\n        formatter: highlightingFormatter,\r\n        header: {\r\n          buttons: [\r\n            {\r\n              cssClass: 'fa fa-circle-o red faded',\r\n              command: 'toggle-highlight',\r\n              tooltip: 'Highlight negative numbers.'\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }\r\n\r\n    // Set multiple buttons on the first column to demonstrate overflow.\r\n    this.columnDefinitions[0].name = 'Resize me!';\r\n    this.columnDefinitions[0].header = {\r\n      buttons: [\r\n        {\r\n          cssClass: 'fa fa-tag',\r\n          handler: (e) => {\r\n            alert('Tag');\r\n          }\r\n        },\r\n        {\r\n          cssClass: 'fa fa-comment',\r\n          handler: (e) => {\r\n            alert('Comment');\r\n          }\r\n        },\r\n        {\r\n          cssClass: 'fa fa-info-circle',\r\n          handler: (e) => {\r\n            alert('Info');\r\n          }\r\n        },\r\n        {\r\n          cssClass: 'fa fa-question-circle',\r\n          handler: (e) => {\r\n            alert('Help');\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    // Set a button on the second column to demonstrate hover.\r\n    this.columnDefinitions[1].name = 'Hover me!';\r\n    this.columnDefinitions[1].header = {\r\n      buttons: [\r\n        {\r\n          cssClass: 'fa fa-question-circle',\r\n          showOnHover: true,\r\n          tooltip: 'This button only appears on hover.',\r\n          handler: (e) => {\r\n            alert('Help');\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    // mock a dataset\r\n    const mockDataset = [];\r\n    for (let i = 0; i < 100; i++) {\r\n      const d = (mockDataset[i] = {});\r\n      d['id'] = i;\r\n      for (let j = 0; j < this.columnDefinitions.length; j++) {\r\n        d[j] = Math.round(Math.random() * 10) - 5;\r\n      }\r\n    }\r\n    this.dataset = mockDataset;\r\n  }\r\n\r\n  gridReady(grid) {\r\n    this.gridObj = grid;\r\n  }\r\n  dataviewReady(dataview) {\r\n    this.dataviewObj = dataview;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headerbutton.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <angular-slickgrid gridId=\\\"grid2\\\" (dataviewChanged)=\\\"dataviewReady($event)\\\" (gridChanged)=\\\"gridReady($event)\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\">\\r\\n        </angular-slickgrid>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headermenu.component.html\n// module id = ../../../../../src/app/examples/grid-headermenu.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { Column, ControlAndPluginService, FieldType, Formatter, Formatters, GridOption } from 'angular-slickgrid';\r\nimport * as $ from 'jquery';\r\n\r\n// create a custom Formatter to highlight negative values in red\r\nconst columnsWithHighlightingById = {};\r\nconst highlightingFormatter = (row, cell, value, columnDef, dataContext) => {\r\n  if (columnsWithHighlightingById[columnDef.id] && value < 0) {\r\n    return `<div style=\"color:red; font-weight:bold;\">${value}</div>`;\r\n  } else {\r\n    return value;\r\n  }\r\n};\r\n\r\n@Component({\r\n  templateUrl: './grid-headermenu.component.html'\r\n})\r\n@Injectable()\r\nexport class GridHeaderMenuComponent implements OnInit {\r\n  title = 'Example 8: Header Menu Plugin';\r\n  subTitle = `\r\n    This example demonstrates using the <b>Slick.Plugins.HeaderMenu</b> plugin to easily add menus to colum headers.<br/>\r\n    These menus can be specified directly in the column definition, and are very easy to configure and use.\r\n    (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/SlickGrid-Controls-&-Plugins\">Wiki link</a>)\r\n    <ul>\r\n      <li>Hover over any column header to see an arrow showing up on the right</li>\r\n      <li>Try Sorting (multi-sort) the 2 columns \"Duration\" and \"% Complete\" (the other ones are disabled)</li>\r\n      <li>Try hiding any columns (you use the \"Column Picker\" plugin by doing a right+click on the header to show the column back)</li>\r\n    </ul>\r\n  `;\r\n\r\n  columnDefinitions: Column[];\r\n  gridOptions: GridOption;\r\n  dataset: any[];\r\n  gridObj: any;\r\n  dataviewObj: any;\r\n  visibleColumns: Column[];\r\n\r\n  constructor(private controlService: ControlAndPluginService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefinitions = [\r\n      { id: 'title', name: 'Title', field: 'title' },\r\n      { id: 'duration', name: 'Duration', field: 'duration', sortable: true },\r\n      { id: '%', name: '% Complete', field: 'percentComplete', sortable: true },\r\n      { id: 'start', name: 'Start', field: 'start' },\r\n      { id: 'finish', name: 'Finish', field: 'finish' },\r\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven' }\r\n    ];\r\n    for (let i = 0; i < this.columnDefinitions.length; i++) {\r\n      this.columnDefinitions[i].header = {\r\n        menu: {\r\n          items: [\r\n            {\r\n              iconCssClass: 'fa fa-sort-asc',\r\n              title: 'Sort Ascending',\r\n              disabled: !this.columnDefinitions[i].sortable,\r\n              command: 'sort-asc'\r\n            },\r\n            {\r\n              iconCssClass: 'fa fa-sort-desc',\r\n              title: 'Sort Descending',\r\n              disabled: !this.columnDefinitions[i].sortable,\r\n              command: 'sort-desc'\r\n            },\r\n            {\r\n              title: 'Hide Column',\r\n              command: 'hide'\r\n            },\r\n            {\r\n              iconCssClass: 'fa fa-question-circle',\r\n              title: 'Help',\r\n              command: 'help'\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    }\r\n    this.visibleColumns = this.columnDefinitions;\r\n\r\n    this.gridOptions = {\r\n      enableAutoResize: true,\r\n      enableHeaderMenu: true,\r\n      autoResize: {\r\n        containerId: 'demo-container',\r\n        sidePadding: 15\r\n      },\r\n      enableFiltering: false,\r\n      enableCellNavigation: true,\r\n      headerMenu: {\r\n        onCommand: (e, args) => {\r\n          if (args.command === 'hide') {\r\n            this.controlService.hideColumn(args.column);\r\n            this.controlService.autoResizeColumns();\r\n          } else if (args.command === 'sort-asc' || args.command === 'sort-desc') {\r\n            // get previously sorted columns\r\n            // getSortColumns() only returns sortAsc & columnId, we want the entire column definition\r\n            const oldSortColumns = this.gridObj.getSortColumns();\r\n            const cols = $.map(oldSortColumns, (col) => {\r\n              // get the column definition but only keep column which are not equal to our current column\r\n              if (col.columnId !== args.column.id) {\r\n                return { sortCol: this.columnDefinitions[this.gridObj.getColumnIndex(col.columnId)], sortAsc: col.sortAsc };\r\n              }\r\n            });\r\n            // add to the column array, the column sorted by the header menu\r\n            const isSortedAsc = (args.command === 'sort-asc');\r\n            cols.push({ sortAsc: isSortedAsc, sortCol: args.column });\r\n            // update the this.gridObj sortColumns array which will at the same add the visual sort icon(s) on the UI\r\n            const newSortColumns = $.map(cols, (col) => {\r\n              return { columnId: col.sortCol.id, sortAsc: col.sortAsc };\r\n            });\r\n            this.gridObj.setSortColumns(newSortColumns);\r\n            this.executeSort(cols);\r\n          } else {\r\n            alert('Command: ' + args.command);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.getData();\r\n  }\r\n\r\n  getData() {\r\n    // Set up some test columns.\r\n    const mockDataset = [];\r\n    for (let i = 0; i < 500; i++) {\r\n      mockDataset[i] = {\r\n        id: i,\r\n        title: 'Task ' + i,\r\n        duration: Math.round(Math.random() * 25) + ' days',\r\n        percentComplete: Math.round(Math.random() * 100),\r\n        start: '01/01/2009',\r\n        finish: '01/05/2009',\r\n        effortDriven: (i % 5 === 0)\r\n      };\r\n    }\r\n    this.dataset = mockDataset;\r\n  }\r\n\r\n  gridReady(grid) {\r\n    this.gridObj = grid;\r\n  }\r\n  dataviewReady(dataview) {\r\n    this.dataviewObj = dataview;\r\n  }\r\n\r\n  executeSort(cols) {\r\n    this.dataviewObj.sort((dataRow1, dataRow2) => {\r\n      for (let i = 0, l = cols.length; i < l; i++) {\r\n        const field = cols[i].sortCol.field;\r\n        const sign = cols[i].sortAsc ? 1 : -1;\r\n        const value1 = dataRow1[field];\r\n        const value2 = dataRow2[field];\r\n        const result = (value1 === value2 ? 0 : (value1 > value2 ? 1 : -1)) * sign;\r\n        if (result !== 0) {\r\n          return result;\r\n        }\r\n      }\r\n      return 0;\r\n    });\r\n    this.gridObj.invalidate();\r\n    this.gridObj.render();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-headermenu.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n    <h2>{{title}}</h2>\\r\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n        <angular-slickgrid gridId=\\\"grid2\\\" (dataviewChanged)=\\\"dataviewReady($event)\\\" (gridChanged)=\\\"gridReady($event)\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\" [gridOptions]=\\\"gridOptions\\\" [dataset]=\\\"dataset\\\">\\r\\n        </angular-slickgrid>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-menu.component.html\n// module id = ../../../../../src/app/examples/grid-menu.component.html\n// module chunks = main","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Column, FieldType, FilterService, Formatter, Formatters, FormElementType, GridOption } from 'angular-slickgrid';\nimport * as $ from 'jquery';\n\n// create a custom Formatter to highlight negative values in red\nconst columnsWithHighlightingById = {};\nconst highlightingFormatter = (row, cell, value, columnDef, dataContext) => {\n  if (columnsWithHighlightingById[columnDef.id] && value < 0) {\n    return `<div style=\"color:red; font-weight:bold;\">${value}</div>`;\n  } else {\n    return value;\n  }\n};\n\n@Component({\n  templateUrl: './grid-menu.component.html'\n})\n@Injectable()\nexport class GridMenuComponent implements OnInit {\n  title = 'Example 9: Grid Menu Control';\n  subTitle = `\n    This example demonstrates using the <b>Slick.Controls.GridMenu</b> plugin to easily add a Grid Menu (aka hamburger menu) on the top right corner of the grid.\n    (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/Grid-Menu\">Wiki link</a>)\n    <br/>\n    <ul>\n      <li>The Grid Menu uses the following icon by default \"fa-bars\"&nbsp;&nbsp;<span class=\"fa fa-bars\"></span>&nbsp;&nbsp;(which looks like a hamburger, hence the name)</li>\n      <ul><li>Another icon which you could use is \"fa-ellipsis-v\"&nbsp;&nbsp;<span class=\"fa fa-ellipsis-v\"></span>&nbsp;&nbsp;(which is shown in this example)</li></ul>\n      <li>By default the Grid Menu shows all columns which you can show/hide</li>\n      <li>You can configure multiple \"commands\" to show up in the Grid Menu and use the \"onGridMenuCommand()\" callback</li>\n      <li>Doing a \"right+click\" over any column header will also provide a way to show/hide a column (via the Column Picker Plugin)</li>\n    </ul>\n  `;\n\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n  gridObj: any;\n  dataviewObj: any;\n  visibleColumns: Column[];\n\n  constructor(private filterService: FilterService) {}\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      { id: 'title', name: 'Title', field: 'title', filterable: true, type: FieldType.string },\n      { id: 'duration', name: 'Duration', field: 'duration', sortable: true, filterable: true, type: FieldType.string },\n      { id: '%', name: '% Complete', field: 'percentComplete', sortable: true, filterable: true, type: FieldType.number },\n      { id: 'start', name: 'Start', field: 'start', filterable: true, type: FieldType.string },\n      { id: 'finish', name: 'Finish', field: 'finish', filterable: true, type: FieldType.string },\n      {\n        id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', maxWidth: 80, formatter: Formatters.checkmark,\n        type: FieldType.boolean,\n        minWidth: 100,\n        sortable: true,\n        filterable: true,\n        filter: {\n          searchTerm: '', // default selection\n          type: FormElementType.select,\n          selectOptions: [{ value: '', label: '' }, { value: true, label: 'true' }, { value: false, label: 'false' }]\n        }\n      }\n    ];\n\n    this.visibleColumns = this.columnDefinitions;\n\n    this.gridOptions = {\n      enableAutoResize: true,\n      enableGridMenu: true,\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      enableFiltering: true,\n      enableCellNavigation: true,\n      gridMenu: {\n        customTitle: 'Custom Commands',\n        columnTitle: 'Columns',\n        iconCssClass: 'fa fa-ellipsis-v',\n        menuWidth: 17,\n        resizeOnShowHeaderRow: true,\n        customItems: [\n          {\n            iconCssClass: 'fa fa-filter text-danger',\n            title: 'Clear All Filters',\n            disabled: false,\n            command: 'clear-filter'\n          },\n          {\n            iconCssClass: 'fa fa-random',\n            title: 'Toggle Filter Row',\n            disabled: false,\n            command: 'toggle-filter'\n          },\n          {\n            iconCssClass: 'fa fa-random',\n            title: 'Toggle Top Panel',\n            disabled: false,\n            command: 'toggle-toppanel'\n          },\n          {\n            iconCssClass: 'fa fa-question-circle',\n            title: 'Help',\n            disabled: false,\n            command: 'help'\n          },\n          {\n            title: 'Disabled command',\n            disabled: true,\n            command: 'disabled-command'\n          }\n        ],\n        onCommand: (e, args) => {\n          if (args.command === 'toggle-filter') {\n            this.gridObj.setHeaderRowVisibility(!this.gridObj.getOptions().showHeaderRow);\n          } else if (args.command === 'toggle-toppanel') {\n            this.gridObj.setTopPanelVisibility(!this.gridObj.getOptions().showTopPanel);\n          } else if (args.command === 'clear-filter') {\n            this.filterService.clearFilters();\n          } else {\n            alert('Command: ' + args.command);\n          }\n        }\n      },\n    };\n\n    this.getData();\n  }\n\n  getData() {\n    // Set up some test columns.\n    const mockDataset = [];\n    for (let i = 0; i < 500; i++) {\n      mockDataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 25) + ' days',\n        percentComplete: Math.round(Math.random() * 100),\n        start: '01/01/2009',\n        finish: '01/05/2009',\n        effortDriven: (i % 5 === 0)\n      };\n    }\n    this.dataset = mockDataset;\n  }\n\n  gridReady(grid) {\n    this.gridObj = grid;\n  }\n  dataviewReady(dataview) {\n    this.dataviewObj = dataview;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-menu.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{title}}</h2>\\r\\n  <div class=\\\"subtitle row\\\" [innerHTML]=\\\"subTitle\\\"></div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div [class]=\\\"status.class\\\" role=\\\"alert\\\">\\r\\n        <strong>Status: </strong> {{status.text}}\\r\\n        <span [hidden]=\\\"!processing\\\">\\r\\n          <i class=\\\"fa fa-refresh fa-spin fa-lg fa-fw\\\"></i>\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n      <div class=\\\"alert alert-info\\\">\\r\\n        <strong>OData Query:</strong> {{odataQuery}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <angular-slickgrid gridId=\\\"grid4\\\"\\r\\n            [columnDefinitions]=\\\"columnDefinitions\\\"\\r\\n            [gridOptions]=\\\"gridOptions\\\"\\r\\n            [dataset]=\\\"dataset\\\">\\r\\n  </angular-slickgrid>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.html\n// module id = ../../../../../src/app/examples/grid-odata.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CaseType, Column, FormElementType, GridOption, FieldType, Formatters, GridOdataService } from 'angular-slickgrid';\nimport { HttpClient } from '@angular/common/http';\n\nconst defaultPageSize = 20;\nconst sampleDataRoot = 'assets/data';\n\n@Component({\n  templateUrl: './grid-odata.component.html'\n})\nexport class GridOdataComponent implements OnInit {\n  title = 'Example 5: Grid connected to Backend Server with OData';\n  subTitle = `\n    Sorting/Paging connected to a Backend OData Service (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/OData\">Wiki link</a>).\n    <br/>\n    <ul class=\"small\">\n      <li>Only \"Name\" field is sortable for the demo (because we use JSON files), however \"multiColumnSort: true\" is also supported</li>\n      <li>String column also support operator (>, >=, <, <=, <>, !=, =, ==, *)\n      <ul>\n        <li>The (*) can be used as startsWith (ex.: \"abc*\" => startsWith \"abc\") / endsWith (ex.: \"*xyz\" => endsWith \"xyz\")</li>\n        <li>The other operators can be used on column type number for example: \">=100\" (bigger or equal than 100)</li>\n      </ul>\n      <li>OData Service could be replaced by other Service type in the future (GraphQL or whichever you provide)</li>\n    </ul>\n  `;\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset = [];\n\n  odataQuery = '';\n  processing = false;\n  status = { text: '', class: '' };\n\n  constructor(private http: HttpClient, private odataService: GridOdataService) {\n    this.odataService.initOptions({\n      caseType: CaseType.pascalCase,\n      top: defaultPageSize\n    });\n  }\n\n  ngOnInit(): void {\n    this.columnDefinitions = [\n      { id: 'name', name: 'Name', field: 'name', filterable: true, sortable: true, type: FieldType.string, minWidth: 100 },\n      { id: 'gender', name: 'Gender', field: 'gender', filterable: true, sortable: true, minWidth: 100,\n        filter: {\n          searchTerm: '', // default selection\n          type: FormElementType.select,\n          selectOptions: [ { value: '', label: '' }, { value: 'male', label: 'male' }, { value: 'female', label: 'female' } ]\n        }\n      },\n      { id: 'company', name: 'Company', field: 'company', minWidth: 100 }\n    ];\n\n    this.gridOptions = {\n      enableAutoResize: true,\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      enableFiltering: true,\n      enableCellNavigation: true,\n      enablePagination: true,\n      pagination: {\n        pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\n        pageSize: defaultPageSize,\n        totalItems: 0\n      },\n      onBackendEventApi: {\n        onInit: (query) => this.getCustomerApiCall(query),\n        preProcess: () => this.displaySpinner(true),\n        process: (query) => this.getCustomerApiCall(query),\n        postProcess: (response) => {\n          console.log(response);\n          this.displaySpinner(false);\n          this.getCustomerCallback(response);\n        },\n        filterTypingDebounce: 700,\n        service: this.odataService\n      }\n    };\n  }\n\n  displaySpinner(isProcessing) {\n    this.processing = isProcessing;\n    this.status = (isProcessing)\n      ? { text: 'processing...', class: 'alert alert-danger' }\n      : { text: 'done', class: 'alert alert-success' };\n  }\n\n  getCustomerCallback(data) {\n    this.displaySpinner(false);\n\n    this.dataset = data['items'];\n    this.odataQuery = data['query'];\n\n    // totalItems property needs to be filled for pagination to work correctly\n    this.gridOptions.pagination.totalItems = data['totalRecordCount'];\n  }\n\n  getCustomerApiCall(query) {\n    // in your case, you will call your WebAPI function (wich needs to return a Promise)\n    // for the demo purpose, we will call a mock WebAPI function\n    return this.getCustomerDataApiMock(query);\n  }\n\n  /** This function is only here to mock a WebAPI call (since we are using a JSON file for the demo)\n   *  in your case the getCustomer() should be a WebAPI function returning a Promise\n   */\n  getCustomerDataApiMock(query) {\n    // the mock is returning a Promise, just like a WebAPI typically does\n    return new Promise((resolve, reject) => {\n      const queryParams = query.toLowerCase().split('&');\n      let top: number;\n      let skip = 0;\n      let orderBy = '';\n      let countTotalItems = 100;\n      let columnFilters = {};\n\n      for (const param of queryParams) {\n        if (param.includes('$top=')) {\n          top = +(param.substring('$top='.length));\n        }\n        if (param.includes('$skip=')) {\n          skip = +(param.substring('$skip='.length));\n        }\n        if (param.includes('$orderby=')) {\n          orderBy = param.substring('$orderby='.length);\n        }\n        if (param.includes('$filter=')) {\n          const filterBy = param.substring('$filter='.length);\n          if (filterBy.includes('substringof')) {\n            const filterMatch = filterBy.match(/substringof\\('(.*?)',([a-zA-Z ]*)/);\n            const fieldName = filterMatch[2].trim();\n            columnFilters[fieldName] = {\n              type: 'substring',\n              term: filterMatch[1].trim()\n            };\n          }\n          if (filterBy.includes('eq')) {\n            const filterMatch = filterBy.match(/([a-zA-Z ]*) eq '(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'equal',\n              term: filterMatch[2].trim()\n            };\n          }\n          if (filterBy.includes('startswith')) {\n            const filterMatch = filterBy.match(/startswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'starts',\n              term: filterMatch[2].trim()\n            };\n          }\n          if (filterBy.includes('endswith')) {\n            const filterMatch = filterBy.match(/endswith\\(([a-zA-Z ]*),\\s?'(.*?)'/);\n            const fieldName = filterMatch[1].trim();\n            columnFilters[fieldName] = {\n              type: 'ends',\n              term: filterMatch[2].trim()\n            };\n          }\n        }\n      }\n\n      const sort = orderBy.includes('asc')\n        ? 'ASC'\n        : orderBy.includes('desc')\n          ? 'DESC'\n          : '';\n\n      let url;\n      switch (sort) {\n        case 'ASC':\n          url = `${sampleDataRoot}/customers_100_ASC.json`;\n          break;\n        case 'DESC':\n          url = `${sampleDataRoot}/customers_100_DESC.json`;\n          break;\n        default:\n          url = `${sampleDataRoot}/customers_100.json`;\n          break;\n      }\n\n      this.http.get(url).subscribe(data => {\n        const dataArray = <any[]> data;\n\n        // Read the result field from the JSON response.\n        const firstRow = skip;\n        let filteredData = dataArray;\n        if (columnFilters) {\n          for (const columnId in columnFilters) {\n            if (columnFilters.hasOwnProperty(columnId)) {\n              filteredData = filteredData.filter(column => {\n                const filterType = columnFilters[columnId].type;\n                const searchTerm = columnFilters[columnId].term;\n                switch (filterType) {\n                  case 'equal': return column[columnId] === searchTerm;\n                  case 'ends': return column[columnId].toLowerCase().endsWith(searchTerm);\n                  case 'starts': return column[columnId].toLowerCase().startsWith(searchTerm);\n                  case 'substring': return column[columnId].toLowerCase().includes(searchTerm);\n                }\n              });\n            }\n          }\n          countTotalItems = filteredData.length;\n        }\n        const updatedData = filteredData.slice(firstRow, firstRow + top);\n\n        setTimeout(() => {\n          resolve({ items: updatedData, totalRecordCount: countTotalItems, query: query });\n        }, 500);\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-odata.component.ts","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n    <h2>{{title}}</h2>\\n    <div class=\\\"subtitle\\\" [innerHTML]=\\\"subTitle\\\"></div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\">\\n          <div class=\\\"form-inline\\\">\\n            <label class=\\\"control-label\\\" for=\\\"radioWithCursor\\\">Multi-Select / Single</label>\\n            <span id=\\\"radioWithCursor\\\">\\n              <label class=\\\"radio-inline control-label\\\" for=\\\"radioTrue\\\">\\n                <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioTrue\\\" checked [value]=\\\"isMultiSelect\\\" (change)=\\\"onChooseMultiSelectType(true)\\\">\\n                Multi-Select\\n              </label>\\n              <label class=\\\"radio-inline control-label\\\" for=\\\"radioFalse\\\">\\n                <input type=\\\"radio\\\" name=\\\"inlineRadioOptions\\\" id=\\\"radioFalse\\\" [value]=\\\"isMultiSelect\\\" (change)=\\\"onChooseMultiSelectType(false)\\\">\\n                Single\\n              </label>\\n            </span>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-8\\\">\\n          <div class=\\\"alert alert-info\\\">\\n            <strong>Selected Row(s):</strong>\\n            <div [innerHTML]=\\\"selectedObjects\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n\\n    <angular-slickgrid gridId=\\\"grid1\\\"\\n                (dataviewChanged)=\\\"dataviewReady($event)\\\" (gridChanged)=\\\"gridReady($event)\\\"\\n              [columnDefinitions]=\\\"columnDefinitions\\\"\\n              [gridOptions]=\\\"gridOptions\\\"\\n              [dataset]=\\\"dataset\\\">\\n    </angular-slickgrid>\\n    <br/>\\n    <hr/>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-rowselection.component.html\n// module id = ../../../../../src/app/examples/grid-rowselection.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Column, FieldType, Formatter, Formatters, GridExtraService, GridExtraUtils, GridOption } from 'angular-slickgrid';\n\n@Component({\n  templateUrl: './grid-rowselection.component.html'\n})\nexport class GridRowSelectionComponent implements OnInit {\n  title = 'Example 10: Grid with Row Selection';\n  subTitle = `\n    Row selection, single or multi-select (<a href=\"https://github.com/ghiscoding/Angular-Slickgrid/wiki/Row-Selection\">Wiki link</a>).\n  `;\n\n  columnDefinitions: Column[];\n  gridOptions: GridOption;\n  dataset: any[];\n  gridObj: any;\n  dataviewObj: any;\n  isMultiSelect = true;\n  selectedObjects: any[];\n  selectedObject: any;\n\n  constructor(private gridExtraService: GridExtraService) {}\n\n  ngOnInit(): void {\n    this.prepareGrid();\n  }\n\n  prepareGrid() {\n    this.columnDefinitions = [\n      {id: 'title', name: 'Title', field: 'title', sortable: true, type: FieldType.string},\n      {id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true, type: FieldType.number},\n      {id: 'complete', name: '% Complete', field: 'percentComplete', formatter: Formatters.percentCompleteBar, type: FieldType.number, sortable: true},\n      {id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, sortable: true, type: FieldType.dateIso },\n      {id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso, sortable: true, type: FieldType.date },\n      {id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', formatter: Formatters.checkmark, type: FieldType.number, sortable: true}\n    ];\n    this.gridOptions = {\n      autoResize: {\n        containerId: 'demo-container',\n        sidePadding: 15\n      },\n      enableAutoResize: true,\n      enableCellNavigation: false,\n      enableCheckboxSelector: true\n    };\n\n    this.dataset = this.prepareData();\n  }\n\n  prepareData() {\n    // mock a dataset\n    const mockDataset = [];\n    for (let i = 0; i < 500; i++) {\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\n      const randomMonth = Math.floor(Math.random() * 11);\n      const randomDay = Math.floor((Math.random() * 29));\n      const randomPercent = Math.round(Math.random() * 100);\n\n      mockDataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        percentCompleteNumber: randomPercent,\n        start: new Date(randomYear, randomMonth, randomDay),\n        finish: new Date(randomYear, (randomMonth + 1), randomDay),\n        effortDriven: (i % 5 === 0)\n      };\n    }\n    return mockDataset;\n  }\n\n  gridReady(grid) {\n    this.gridObj = grid;\n\n    grid.onSelectedRowsChanged.subscribe((e, args) => {\n      if (Array.isArray(args.rows)) {\n        this.selectedObjects = args.rows.map(idx => {\n          const item = grid.getDataItem(idx);\n          return item.title || '';\n        });\n      }\n    });\n  }\n  dataviewReady(dataview) {\n    this.dataviewObj = dataview;\n  }\n\n  onChooseMultiSelectType(isMultiSelect) {\n    this.isMultiSelect = isMultiSelect;\n\n    this.gridObj.setOptions({\n      enableCellNavigation: !isMultiSelect,\n      enableCheckboxSelector: isMultiSelect\n    }); // change the grid option dynamically\n    this.gridExtraService.setSelectedRows([]);\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/app/examples/grid-rowselection.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sourcecode/Angular-Slickgrid-PackageTest/src/main.ts"],"sourceRoot":"webpack:///"}